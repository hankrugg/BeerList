{"ast":null,"code":"'use client';\n\nimport { useEventCallback, KEY_VALUES } from '../../../utils';\n/**\n * A hook to control the toggle keyboard operation\n * @param props\n */\nvar useToggleKeyDownEvent = function useToggleKeyDownEvent(props) {\n  var _props$toggle = props.toggle,\n    toggle = _props$toggle === void 0 ? true : _props$toggle,\n    trigger = props.trigger,\n    target = props.target,\n    overlay = props.overlay,\n    searchInput = props.searchInput,\n    active = props.active,\n    readOnly = props.readOnly,\n    disabled = props.disabled,\n    loading = props.loading,\n    onExit = props.onExit,\n    onOpen = props.onOpen,\n    onClose = props.onClose,\n    onKeyDown = props.onKeyDown,\n    onMenuKeyDown = props.onMenuKeyDown,\n    onMenuPressEnter = props.onMenuPressEnter,\n    onMenuPressBackspace = props.onMenuPressBackspace;\n  var handleClose = useEventCallback(function () {\n    var _trigger$current, _trigger$current$clos, _trigger$current2, _trigger$current2$foc;\n    (_trigger$current = trigger.current) === null || _trigger$current === void 0 ? void 0 : (_trigger$current$clos = _trigger$current.close) === null || _trigger$current$clos === void 0 ? void 0 : _trigger$current$clos.call(_trigger$current);\n\n    // The focus is on the trigger button after closing\n    (_trigger$current2 = trigger.current) === null || _trigger$current2 === void 0 ? void 0 : (_trigger$current2$foc = _trigger$current2.focus) === null || _trigger$current2$foc === void 0 ? void 0 : _trigger$current2$foc.call(_trigger$current2);\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  });\n  var handleOpen = useEventCallback(function () {\n    var _trigger$current3, _trigger$current3$ope;\n    (_trigger$current3 = trigger.current) === null || _trigger$current3 === void 0 ? void 0 : (_trigger$current3$ope = _trigger$current3.open) === null || _trigger$current3$ope === void 0 ? void 0 : _trigger$current3$ope.call(_trigger$current3);\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n  });\n  var handleToggleDropdown = useEventCallback(function () {\n    if (active) {\n      handleClose();\n      return;\n    }\n    handleOpen();\n  });\n  var onToggle = useEventCallback(function (event) {\n    // Keyboard events should not be processed when readOnly and disabled are set.\n    if (readOnly || disabled || loading) {\n      return;\n    }\n    if (event.target === (target === null || target === void 0 ? void 0 : target.current)) {\n      // enter\n      if (toggle && event.key === KEY_VALUES.ENTER) {\n        handleToggleDropdown();\n      }\n\n      // delete\n      if (event.key === KEY_VALUES.BACKSPACE) {\n        onExit === null || onExit === void 0 ? void 0 : onExit(event);\n      }\n    }\n    if (overlay !== null && overlay !== void 0 && overlay.current) {\n      // The keyboard operation callback on the menu.\n      onMenuKeyDown === null || onMenuKeyDown === void 0 ? void 0 : onMenuKeyDown(event);\n      if (event.key === KEY_VALUES.ENTER) {\n        onMenuPressEnter === null || onMenuPressEnter === void 0 ? void 0 : onMenuPressEnter(event);\n      }\n\n      /**\n       * There is no callback when typing the Backspace key in the search box.\n       * The default is to remove search keywords\n       */\n      if (event.key === KEY_VALUES.BACKSPACE && event.target !== (searchInput === null || searchInput === void 0 ? void 0 : searchInput.current)) {\n        onMenuPressBackspace === null || onMenuPressBackspace === void 0 ? void 0 : onMenuPressBackspace(event);\n      }\n\n      // The search box gets focus when typing characters and numbers.\n      if (event.key.length === 1 && /\\w/.test(event.key)) {\n        var _event$target;\n        // Exclude Input\n        // eg: <SelectPicker renderExtraFooter={() => <Input />} />\n        if (((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.tagName) !== 'INPUT') {\n          var _searchInput$current;\n          searchInput === null || searchInput === void 0 ? void 0 : (_searchInput$current = searchInput.current) === null || _searchInput$current === void 0 ? void 0 : _searchInput$current.focus();\n        }\n      }\n    }\n    if (event.key === KEY_VALUES.ESC || event.key === KEY_VALUES.TAB) {\n      handleClose();\n    }\n\n    // Native event callback\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n  });\n  return onToggle;\n};\nexport default useToggleKeyDownEvent;","map":{"version":3,"names":["useEventCallback","KEY_VALUES","useToggleKeyDownEvent","props","_props$toggle","toggle","trigger","target","overlay","searchInput","active","readOnly","disabled","loading","onExit","onOpen","onClose","onKeyDown","onMenuKeyDown","onMenuPressEnter","onMenuPressBackspace","handleClose","_trigger$current","_trigger$current$clos","_trigger$current2","_trigger$current2$foc","current","close","call","focus","handleOpen","_trigger$current3","_trigger$current3$ope","open","handleToggleDropdown","onToggle","event","key","ENTER","BACKSPACE","length","test","_event$target","tagName","_searchInput$current","ESC","TAB"],"sources":["/Users/hankrugg/projects/Python/Beer/myapp/node_modules/rsuite/esm/internals/Picker/hooks/useToggleKeyDownEvent.js"],"sourcesContent":["'use client';\nimport { useEventCallback, KEY_VALUES } from '../../../utils';\n/**\n * A hook to control the toggle keyboard operation\n * @param props\n */\nvar useToggleKeyDownEvent = function useToggleKeyDownEvent(props) {\n  var _props$toggle = props.toggle,\n    toggle = _props$toggle === void 0 ? true : _props$toggle,\n    trigger = props.trigger,\n    target = props.target,\n    overlay = props.overlay,\n    searchInput = props.searchInput,\n    active = props.active,\n    readOnly = props.readOnly,\n    disabled = props.disabled,\n    loading = props.loading,\n    onExit = props.onExit,\n    onOpen = props.onOpen,\n    onClose = props.onClose,\n    onKeyDown = props.onKeyDown,\n    onMenuKeyDown = props.onMenuKeyDown,\n    onMenuPressEnter = props.onMenuPressEnter,\n    onMenuPressBackspace = props.onMenuPressBackspace;\n  var handleClose = useEventCallback(function () {\n    var _trigger$current, _trigger$current$clos, _trigger$current2, _trigger$current2$foc;\n    (_trigger$current = trigger.current) === null || _trigger$current === void 0 ? void 0 : (_trigger$current$clos = _trigger$current.close) === null || _trigger$current$clos === void 0 ? void 0 : _trigger$current$clos.call(_trigger$current);\n\n    // The focus is on the trigger button after closing\n    (_trigger$current2 = trigger.current) === null || _trigger$current2 === void 0 ? void 0 : (_trigger$current2$foc = _trigger$current2.focus) === null || _trigger$current2$foc === void 0 ? void 0 : _trigger$current2$foc.call(_trigger$current2);\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  });\n  var handleOpen = useEventCallback(function () {\n    var _trigger$current3, _trigger$current3$ope;\n    (_trigger$current3 = trigger.current) === null || _trigger$current3 === void 0 ? void 0 : (_trigger$current3$ope = _trigger$current3.open) === null || _trigger$current3$ope === void 0 ? void 0 : _trigger$current3$ope.call(_trigger$current3);\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n  });\n  var handleToggleDropdown = useEventCallback(function () {\n    if (active) {\n      handleClose();\n      return;\n    }\n    handleOpen();\n  });\n  var onToggle = useEventCallback(function (event) {\n    // Keyboard events should not be processed when readOnly and disabled are set.\n    if (readOnly || disabled || loading) {\n      return;\n    }\n    if (event.target === (target === null || target === void 0 ? void 0 : target.current)) {\n      // enter\n      if (toggle && event.key === KEY_VALUES.ENTER) {\n        handleToggleDropdown();\n      }\n\n      // delete\n      if (event.key === KEY_VALUES.BACKSPACE) {\n        onExit === null || onExit === void 0 ? void 0 : onExit(event);\n      }\n    }\n    if (overlay !== null && overlay !== void 0 && overlay.current) {\n      // The keyboard operation callback on the menu.\n      onMenuKeyDown === null || onMenuKeyDown === void 0 ? void 0 : onMenuKeyDown(event);\n      if (event.key === KEY_VALUES.ENTER) {\n        onMenuPressEnter === null || onMenuPressEnter === void 0 ? void 0 : onMenuPressEnter(event);\n      }\n\n      /**\n       * There is no callback when typing the Backspace key in the search box.\n       * The default is to remove search keywords\n       */\n      if (event.key === KEY_VALUES.BACKSPACE && event.target !== (searchInput === null || searchInput === void 0 ? void 0 : searchInput.current)) {\n        onMenuPressBackspace === null || onMenuPressBackspace === void 0 ? void 0 : onMenuPressBackspace(event);\n      }\n\n      // The search box gets focus when typing characters and numbers.\n      if (event.key.length === 1 && /\\w/.test(event.key)) {\n        var _event$target;\n        // Exclude Input\n        // eg: <SelectPicker renderExtraFooter={() => <Input />} />\n        if (((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.tagName) !== 'INPUT') {\n          var _searchInput$current;\n          searchInput === null || searchInput === void 0 ? void 0 : (_searchInput$current = searchInput.current) === null || _searchInput$current === void 0 ? void 0 : _searchInput$current.focus();\n        }\n      }\n    }\n    if (event.key === KEY_VALUES.ESC || event.key === KEY_VALUES.TAB) {\n      handleClose();\n    }\n\n    // Native event callback\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n  });\n  return onToggle;\n};\nexport default useToggleKeyDownEvent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}